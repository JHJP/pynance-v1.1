{"ast":null,"code":"var _jsxFileName = \"D:\\\\src\\\\pynance-v1.1\\\\src\\\\pages\\\\login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid, CircularProgress, Typography, Button, Tabs, Tab, TextField, Fade } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\"; // styles\n\nimport useStyles from \"./styles\"; // logo\n\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\"; // context\n\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  var classes = useStyles(); // global\n\n  var userDispatch = useUserDispatch(); // local\n\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [firstNameValue, setFirstNameValue] = useState(\"\");\n  var [lastNameValue, setLastNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"admin@flatlogic.com\");\n  var [passwordValue, setPasswordValue] = useState(\"password\");\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.logotypeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        className: classes.logotypeImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.logotypeText,\n        children: \"Material Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: activeTabId,\n          onChange: (e, id) => setActiveTabId(id),\n          indicatorColor: \"primary\",\n          textColor: \"primary\",\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Login\",\n            classes: {\n              root: classes.tab\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"New User\",\n            classes: {\n              root: classes.tab\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), activeTabId === 0 && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h1\",\n            className: classes.greeting,\n            children: \"Good Morning, User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            className: classes.googleButton,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: google,\n              alt: \"google\",\n              className: classes.googleIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), \"\\xA0Sign in with Google\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.formDividerContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formDivider\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.formDividerWord,\n              children: \"or\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formDivider\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Fade, {\n            in: error,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"secondary\",\n              className: classes.errorMessage,\n              children: \"Something is wrong with your login or password :(\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: loginValue,\n            onChange: e => setLoginValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"Email Adress\",\n            type: \"email\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: passwordValue,\n            onChange: e => setPasswordValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"Password\",\n            type: \"password\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.formButtons,\n            children: [isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 26,\n              className: classes.loginLoader\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loginValue.length === 0 || passwordValue.length === 0,\n              onClick: () => loginUser(userDispatch, loginValue, passwordValue, props.history, setIsLoading, setError),\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"large\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              size: \"large\",\n              className: classes.forgetButton,\n              children: \"Forget Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), activeTabId === 1 && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h1\",\n            className: classes.greeting,\n            children: \"Welcome!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            className: classes.subGreeting,\n            children: \"Create your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Fade, {\n            in: error,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"secondary\",\n              className: classes.errorMessage,\n              children: \"Something is wrong with your login or password :(\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"name\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: firstNameValue,\n            onChange: e => setFirstNameValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"First Name\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"name\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: lastNameValue,\n            onChange: e => setLastNameValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"Last Name\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: loginValue,\n            onChange: e => setLoginValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"Email Adress\",\n            type: \"email\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: passwordValue,\n            onChange: e => setPasswordValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"Password\",\n            type: \"password\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.creatingButtonContainer,\n            children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 26\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => loginUser(userDispatch, firstNameValue, lastNameValue, loginValue, passwordValue, props.history, setIsLoading, setError),\n              disabled: loginValue.length === 0 || passwordValue.length === 0 || firstNameValue.length === 0 || lastNameValue.length === 0,\n              size: \"large\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              className: classes.createAccountButton,\n              children: \"Create your account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.formDividerContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formDivider\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.formDividerWord,\n              children: \"or\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formDivider\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            className: classnames(classes.googleButton, classes.googleButtonCreating),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: google,\n              alt: \"google\",\n              className: classes.googleIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), \"\\xA0Sign in with Google\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"primary\",\n        className: classes.copyright,\n        children: [\"\\xA9 2014-\", new Date().getFullYear(), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            textDecoration: 'none',\n            color: 'inherit'\n          },\n          href: \"https://flatlogic.com\",\n          rel: \"noopener noreferrer\",\n          target: \"_blank\",\n          children: \"Flatlogic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 43\n        }, this), \", LLC. All rights reserved.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"UbpOSIT5mlEaMkSkSLvPSz7Ovgc=\", false, function () {\n  return [useStyles, useUserDispatch];\n});\n\n_c = Login;\nexport default _c2 = withRouter(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/src/pynance-v1.1/src/pages/login/Login.js"],"names":["React","useState","Grid","CircularProgress","Typography","Button","Tabs","Tab","TextField","Fade","withRouter","classnames","useStyles","useUserDispatch","loginUser","Login","props","classes","userDispatch","isLoading","setIsLoading","error","setError","activeTabId","setActiveTabId","nameValue","setNameValue","firstNameValue","setFirstNameValue","lastNameValue","setLastNameValue","loginValue","setLoginValue","passwordValue","setPasswordValue","container","logotypeContainer","logo","logotypeImage","logotypeText","formContainer","form","e","id","root","tab","greeting","googleButton","google","googleIcon","formDividerContainer","formDivider","formDividerWord","errorMessage","underline","textFieldUnderline","input","textField","target","value","formButtons","loginLoader","length","history","forgetButton","subGreeting","creatingButtonContainer","createAccountButton","googleButtonCreating","copyright","Date","getFullYear","textDecoration","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\nimport google from \"../../images/google.svg\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [nameValue, setNameValue] = useState(\"\");\r\n  var [firstNameValue, setFirstNameValue] = useState(\"\");\r\n  var [lastNameValue, setLastNameValue] = useState(\"\");\r\n  var [loginValue, setLoginValue] = useState(\"admin@flatlogic.com\");\r\n  var [passwordValue, setPasswordValue] = useState(\"password\");\r\n  \r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>Material Admin</Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\r\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\r\n          </Tabs>\r\n          {activeTabId === 0 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                Good Morning, User\r\n              </Typography>\r\n              <Button size=\"large\" className={classes.googleButton}>\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button>\r\n              <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n              </div>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  <Button\r\n                    disabled={\r\n                      loginValue.length === 0 || passwordValue.length === 0\r\n                    }\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.forgetButton}\r\n                >\r\n                  Forget Password\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n          {activeTabId === 1 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                Welcome!\r\n              </Typography>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                Create your account\r\n              </Typography>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={firstNameValue}\r\n                onChange={e => setFirstNameValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"First Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={lastNameValue}\r\n                onChange={e => setLastNameValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Last Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        firstNameValue,\r\n                        lastNameValue,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      loginValue.length === 0 ||\r\n                      passwordValue.length === 0 ||\r\n                      firstNameValue.length === 0 ||\r\n                      lastNameValue.length === 0\r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Create your account\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n              </div>\r\n              <Button\r\n                size=\"large\"\r\n                className={classnames(\r\n                  classes.googleButton,\r\n                  classes.googleButtonCreating,\r\n                )}\r\n              >\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <Typography color=\"primary\" className={classes.copyright}>\r\n        © 2014-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://flatlogic.com\" rel=\"noopener noreferrer\" target=\"_blank\">Flatlogic</a>, LLC. All rights reserved.\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n"]},"metadata":{},"sourceType":"module"}